package enums;

/**
 * Перечисление, представляющее возможные направления движения в двумерном пространстве.
 * Каждое направление содержит дельты (изменения) для координат X и Y.
 * Используется для унификации логики перемещения объектов.
 */
public enum Direction {
    /**
     * Движение вверх. Уменьшает координату Y на 1.
     * Пример: (x, y) → (x + 0, y - 1)
     */
    UP(0, -1),

    /**
     * Движение вниз. Увеличивает координату Y на 1.
     * Пример: (x, y) → (x + 0, y + 1)
     */
    DOWN(0, 1),

    /**
     * Движение влево. Уменьшает координату X на 1.
     * Пример: (x, y) → (x - 1, y + 0)
     */
    LEFT(-1, 0),

    /**
     * Движение вправо. Увеличивает координату X на 1.
     * Пример: (x, y) → (x + 1, y + 0)
     */
    RIGHT(1, 0);

    // Фиксированные изменения координат для направления
    private final int dx; // Дельта по оси X
    private final int dy; // Дельта по оси Y

    /**
     * Приватный конструктор для инициализации дельт направления.
     * @param dx Изменение координаты X (-1, 0, 1)
     * @param dy Изменение координаты Y (-1, 0, 1)
     */
    Direction(int dx, int dy) {
        this.dx = dx;
        this.dy = dy;
    }

    /**
     * Возвращает изменение координаты X для этого направления.
     * @return -1 (влево), 0 (вертикальное движение), 1 (вправо)
     */
    public int getDx() {
        return dx;
    }

    /**
     * Возвращает изменение координаты Y для этого направления.
     * @return -1 (вверх), 0 (горизонтальное движение), 1 (вниз)
     */
    public int getDy() {
        return dy;
    }
}